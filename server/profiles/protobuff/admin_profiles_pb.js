// source: admin_profiles.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.admin_profiles.AdminProfile', null, global);
goog.exportSymbol('proto.admin_profiles.CreateAdminProfileIn', null, global);
goog.exportSymbol('proto.admin_profiles.CreateAdminProfileOut', null, global);
goog.exportSymbol('proto.admin_profiles.CreateAdminProfileOut.CreateAdminProfileError', null, global);
goog.exportSymbol('proto.admin_profiles.LoginAdminProfileIn', null, global);
goog.exportSymbol('proto.admin_profiles.LoginAdminProfileInOut', null, global);
goog.exportSymbol('proto.admin_profiles.LoginAdminProfileInOut.LoginAdminProfileError', null, global);
goog.exportSymbol('proto.admin_profiles.LogoutAdminProfileIn', null, global);
goog.exportSymbol('proto.admin_profiles.LogoutAdminProfileInOut', null, global);
goog.exportSymbol('proto.admin_profiles.LogoutAdminProfileInOut.LogoutAdminProfileError', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.CreateAdminProfileIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.CreateAdminProfileIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.CreateAdminProfileIn.displayName = 'proto.admin_profiles.CreateAdminProfileIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.AdminProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.AdminProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.AdminProfile.displayName = 'proto.admin_profiles.AdminProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.CreateAdminProfileOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.CreateAdminProfileOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.CreateAdminProfileOut.displayName = 'proto.admin_profiles.CreateAdminProfileOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.LoginAdminProfileIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.LoginAdminProfileIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.LoginAdminProfileIn.displayName = 'proto.admin_profiles.LoginAdminProfileIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.LoginAdminProfileInOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.LoginAdminProfileInOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.LoginAdminProfileInOut.displayName = 'proto.admin_profiles.LoginAdminProfileInOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.LogoutAdminProfileIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.LogoutAdminProfileIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.LogoutAdminProfileIn.displayName = 'proto.admin_profiles.LogoutAdminProfileIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin_profiles.LogoutAdminProfileInOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin_profiles.LogoutAdminProfileInOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin_profiles.LogoutAdminProfileInOut.displayName = 'proto.admin_profiles.LogoutAdminProfileInOut';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.CreateAdminProfileIn.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.CreateAdminProfileIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.CreateAdminProfileIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.CreateAdminProfileIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.admin_profiles.AdminProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.CreateAdminProfileIn}
 */
proto.admin_profiles.CreateAdminProfileIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.CreateAdminProfileIn;
  return proto.admin_profiles.CreateAdminProfileIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.CreateAdminProfileIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.CreateAdminProfileIn}
 */
proto.admin_profiles.CreateAdminProfileIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.admin_profiles.AdminProfile;
      reader.readMessage(value,proto.admin_profiles.AdminProfile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.CreateAdminProfileIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.CreateAdminProfileIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.CreateAdminProfileIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.CreateAdminProfileIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.admin_profiles.AdminProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional AdminProfile profile = 1;
 * @return {?proto.admin_profiles.AdminProfile}
 */
proto.admin_profiles.CreateAdminProfileIn.prototype.getProfile = function() {
  return /** @type{?proto.admin_profiles.AdminProfile} */ (
    jspb.Message.getWrapperField(this, proto.admin_profiles.AdminProfile, 1));
};


/**
 * @param {?proto.admin_profiles.AdminProfile|undefined} value
 * @return {!proto.admin_profiles.CreateAdminProfileIn} returns this
*/
proto.admin_profiles.CreateAdminProfileIn.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admin_profiles.CreateAdminProfileIn} returns this
 */
proto.admin_profiles.CreateAdminProfileIn.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin_profiles.CreateAdminProfileIn.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.AdminProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.AdminProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.AdminProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.AdminProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    login: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.AdminProfile}
 */
proto.admin_profiles.AdminProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.AdminProfile;
  return proto.admin_profiles.AdminProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.AdminProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.AdminProfile}
 */
proto.admin_profiles.AdminProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.AdminProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.AdminProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.AdminProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.AdminProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string login = 1;
 * @return {string}
 */
proto.admin_profiles.AdminProfile.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.admin_profiles.AdminProfile} returns this
 */
proto.admin_profiles.AdminProfile.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.admin_profiles.AdminProfile.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.admin_profiles.AdminProfile} returns this
 */
proto.admin_profiles.AdminProfile.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.CreateAdminProfileOut.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.CreateAdminProfileOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.CreateAdminProfileOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.CreateAdminProfileOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.CreateAdminProfileOut}
 */
proto.admin_profiles.CreateAdminProfileOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.CreateAdminProfileOut;
  return proto.admin_profiles.CreateAdminProfileOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.CreateAdminProfileOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.CreateAdminProfileOut}
 */
proto.admin_profiles.CreateAdminProfileOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.admin_profiles.CreateAdminProfileOut.CreateAdminProfileError} */ (reader.readEnum());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.CreateAdminProfileOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.CreateAdminProfileOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.CreateAdminProfileOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.CreateAdminProfileOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.admin_profiles.CreateAdminProfileOut.CreateAdminProfileError = {
  NO_ERROR: 0,
  ERROR_CREATING_PROFILE: 1
};

/**
 * optional CreateAdminProfileError error = 1;
 * @return {!proto.admin_profiles.CreateAdminProfileOut.CreateAdminProfileError}
 */
proto.admin_profiles.CreateAdminProfileOut.prototype.getError = function() {
  return /** @type {!proto.admin_profiles.CreateAdminProfileOut.CreateAdminProfileError} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.admin_profiles.CreateAdminProfileOut.CreateAdminProfileError} value
 * @return {!proto.admin_profiles.CreateAdminProfileOut} returns this
 */
proto.admin_profiles.CreateAdminProfileOut.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.LoginAdminProfileIn.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.LoginAdminProfileIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.LoginAdminProfileIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LoginAdminProfileIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.admin_profiles.AdminProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.LoginAdminProfileIn}
 */
proto.admin_profiles.LoginAdminProfileIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.LoginAdminProfileIn;
  return proto.admin_profiles.LoginAdminProfileIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.LoginAdminProfileIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.LoginAdminProfileIn}
 */
proto.admin_profiles.LoginAdminProfileIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.admin_profiles.AdminProfile;
      reader.readMessage(value,proto.admin_profiles.AdminProfile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.LoginAdminProfileIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.LoginAdminProfileIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.LoginAdminProfileIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LoginAdminProfileIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.admin_profiles.AdminProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional AdminProfile profile = 1;
 * @return {?proto.admin_profiles.AdminProfile}
 */
proto.admin_profiles.LoginAdminProfileIn.prototype.getProfile = function() {
  return /** @type{?proto.admin_profiles.AdminProfile} */ (
    jspb.Message.getWrapperField(this, proto.admin_profiles.AdminProfile, 1));
};


/**
 * @param {?proto.admin_profiles.AdminProfile|undefined} value
 * @return {!proto.admin_profiles.LoginAdminProfileIn} returns this
*/
proto.admin_profiles.LoginAdminProfileIn.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admin_profiles.LoginAdminProfileIn} returns this
 */
proto.admin_profiles.LoginAdminProfileIn.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin_profiles.LoginAdminProfileIn.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.LoginAdminProfileInOut.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.LoginAdminProfileInOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.LoginAdminProfileInOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LoginAdminProfileInOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.LoginAdminProfileInOut}
 */
proto.admin_profiles.LoginAdminProfileInOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.LoginAdminProfileInOut;
  return proto.admin_profiles.LoginAdminProfileInOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.LoginAdminProfileInOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.LoginAdminProfileInOut}
 */
proto.admin_profiles.LoginAdminProfileInOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 2:
      var value = /** @type {!proto.admin_profiles.LoginAdminProfileInOut.LoginAdminProfileError} */ (reader.readEnum());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.LoginAdminProfileInOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.LoginAdminProfileInOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.LoginAdminProfileInOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LoginAdminProfileInOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.admin_profiles.LoginAdminProfileInOut.LoginAdminProfileError = {
  NO_ERROR: 0,
  ERROR_LOGIN_PROFILE: 1
};

/**
 * optional string session = 1;
 * @return {string}
 */
proto.admin_profiles.LoginAdminProfileInOut.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.admin_profiles.LoginAdminProfileInOut} returns this
 */
proto.admin_profiles.LoginAdminProfileInOut.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LoginAdminProfileError error = 2;
 * @return {!proto.admin_profiles.LoginAdminProfileInOut.LoginAdminProfileError}
 */
proto.admin_profiles.LoginAdminProfileInOut.prototype.getError = function() {
  return /** @type {!proto.admin_profiles.LoginAdminProfileInOut.LoginAdminProfileError} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.admin_profiles.LoginAdminProfileInOut.LoginAdminProfileError} value
 * @return {!proto.admin_profiles.LoginAdminProfileInOut} returns this
 */
proto.admin_profiles.LoginAdminProfileInOut.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.LogoutAdminProfileIn.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.LogoutAdminProfileIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.LogoutAdminProfileIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LogoutAdminProfileIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.admin_profiles.AdminProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.LogoutAdminProfileIn}
 */
proto.admin_profiles.LogoutAdminProfileIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.LogoutAdminProfileIn;
  return proto.admin_profiles.LogoutAdminProfileIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.LogoutAdminProfileIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.LogoutAdminProfileIn}
 */
proto.admin_profiles.LogoutAdminProfileIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.admin_profiles.AdminProfile;
      reader.readMessage(value,proto.admin_profiles.AdminProfile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.LogoutAdminProfileIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.LogoutAdminProfileIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.LogoutAdminProfileIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LogoutAdminProfileIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.admin_profiles.AdminProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional AdminProfile profile = 1;
 * @return {?proto.admin_profiles.AdminProfile}
 */
proto.admin_profiles.LogoutAdminProfileIn.prototype.getProfile = function() {
  return /** @type{?proto.admin_profiles.AdminProfile} */ (
    jspb.Message.getWrapperField(this, proto.admin_profiles.AdminProfile, 1));
};


/**
 * @param {?proto.admin_profiles.AdminProfile|undefined} value
 * @return {!proto.admin_profiles.LogoutAdminProfileIn} returns this
*/
proto.admin_profiles.LogoutAdminProfileIn.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admin_profiles.LogoutAdminProfileIn} returns this
 */
proto.admin_profiles.LogoutAdminProfileIn.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin_profiles.LogoutAdminProfileIn.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.toObject = function(opt_includeInstance) {
  return proto.admin_profiles.LogoutAdminProfileInOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin_profiles.LogoutAdminProfileInOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LogoutAdminProfileInOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.admin_profiles.AdminProfile.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin_profiles.LogoutAdminProfileInOut}
 */
proto.admin_profiles.LogoutAdminProfileInOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin_profiles.LogoutAdminProfileInOut;
  return proto.admin_profiles.LogoutAdminProfileInOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin_profiles.LogoutAdminProfileInOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin_profiles.LogoutAdminProfileInOut}
 */
proto.admin_profiles.LogoutAdminProfileInOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.admin_profiles.AdminProfile;
      reader.readMessage(value,proto.admin_profiles.AdminProfile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 2:
      var value = /** @type {!proto.admin_profiles.LogoutAdminProfileInOut.LogoutAdminProfileError} */ (reader.readEnum());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin_profiles.LogoutAdminProfileInOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin_profiles.LogoutAdminProfileInOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin_profiles.LogoutAdminProfileInOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.admin_profiles.AdminProfile.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.admin_profiles.LogoutAdminProfileInOut.LogoutAdminProfileError = {
  NO_ERROR: 0,
  ERROR_LOGOUT_PROFILE: 1
};

/**
 * optional AdminProfile profile = 1;
 * @return {?proto.admin_profiles.AdminProfile}
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.getProfile = function() {
  return /** @type{?proto.admin_profiles.AdminProfile} */ (
    jspb.Message.getWrapperField(this, proto.admin_profiles.AdminProfile, 1));
};


/**
 * @param {?proto.admin_profiles.AdminProfile|undefined} value
 * @return {!proto.admin_profiles.LogoutAdminProfileInOut} returns this
*/
proto.admin_profiles.LogoutAdminProfileInOut.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admin_profiles.LogoutAdminProfileInOut} returns this
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LogoutAdminProfileError error = 2;
 * @return {!proto.admin_profiles.LogoutAdminProfileInOut.LogoutAdminProfileError}
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.getError = function() {
  return /** @type {!proto.admin_profiles.LogoutAdminProfileInOut.LogoutAdminProfileError} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.admin_profiles.LogoutAdminProfileInOut.LogoutAdminProfileError} value
 * @return {!proto.admin_profiles.LogoutAdminProfileInOut} returns this
 */
proto.admin_profiles.LogoutAdminProfileInOut.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


goog.object.extend(exports, proto.admin_profiles);
